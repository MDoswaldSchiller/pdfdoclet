<?xml version="1.0"?>

<jsl:stylesheet
    select="$doc"
    xmlns:j="jelly:core"
    xmlns:jsl="jelly:jsl"
    xmlns:x="jelly:xml"
    xmlns:u="jelly:util"
    xmlns:maven="jelly:maven"
    xmlns="dummy" trim="true">

  <!-- This stylesheet expects the versionVariable to be defined before calling it -->
  <jsl:template match="document/body/release">

    <x:set var="version" select="string(@version)"/>
    <j:if test="${versionVariable.equals(version)}">
      <j:useBean var="formatter" class="org.apache.maven.announcement.Formatter"/>

      <j:set var="header" trim="true">================================================================================
PDFDoclet announces the ${pom.name} ${versionVariable} release
================================================================================
      </j:set>

      <j:forEach var="line" items="${formatter.format(header,78)}">
         <j:whitespace trim="false">${line}
</j:whitespace>
      </j:forEach>

<!--
	  <j:whitespace>About ${pom.artifactId}:
	  
</j:whitespace>
      <j:set var="description" trim="true" value="${pom.description}"/>
      <j:forEach var="line" items="${formatter.format(description,78)}">
        <j:whitespace>${line}
</j:whitespace>
      </j:forEach>
-->
      <j:whitespace trim="false">
Changes in this version include:</j:whitespace>

      <x:set var="actions" select="action[@type='add']" sort="@type" />
        <j:if test="${!empty(actions)}">
<j:whitespace trim="false">

--------------------------------------------------------------------------------
  New Features:
--------------------------------------------------------------------------------</j:whitespace>
        <j:forEach var="action" items="${actions}">
          <x:set var="item" select="."/><jsl:applyTemplates select="$action"/>
        </j:forEach>
      </j:if>
      <x:set var="actions" select="action[@type='fix']" sort="@type" />
        <j:if test="${!empty(actions)}">
<j:whitespace trim="false">

--------------------------------------------------------------------------------
  Fixed bugs:
--------------------------------------------------------------------------------</j:whitespace>
        <j:forEach var="action" items="${actions}">
          <x:set var="item" select="."/><jsl:applyTemplates select="$action"/>
        </j:forEach>
      </j:if>
      <x:set var="actions" select="action[@type='update']" sort="@type" />
        <j:if test="${!empty(actions)}">
<j:whitespace trim="false">

--------------------------------------------------------------------------------
  Changes:
--------------------------------------------------------------------------------</j:whitespace>
        <j:forEach var="action" items="${actions}">
          <x:set var="item" select="."/><jsl:applyTemplates select="$action"/>
        </j:forEach>
      </j:if>
      <x:set var="actions" select="action[@type='remove']" sort="@type" />
        <j:if test="${!empty(actions)}">
<j:whitespace trim="false">

  Removed features:
</j:whitespace>
        <j:forEach var="action" items="${actions}">
          <x:set var="item" select="."/><jsl:applyTemplates select="$action"/>
        </j:forEach>
      </j:if>

      <j:whitespace trim="false">

================================================================================
(c) ${pom.organization.name}</j:whitespace>
    </j:if>

  </jsl:template>
  
  <jsl:template match="action" trim="true">
    <x:set var="body" select="string(.)"/>
    <j:set var="counter" value=""/>
        
    <j:set var="issue"><x:expr select="@issue"/></j:set>
    <j:set var="dueto"><x:expr select="@due-to"/></j:set>
        
    <j:set var="text" trim="true">
      ${body}
      <j:if test="${issue != ''}"><j:whitespace> Issue: ${issue}.</j:whitespace></j:if>
      <j:if test="${dueto != ''}"><j:whitespace> Thanks to ${dueto}.</j:whitespace></j:if>
    </j:set>
        
    <j:forEach var="line" items="${formatter.format(text,75)}">
      <j:choose>
        <j:when test="${counter.length() == '0'}">
          <j:whitespace trim="false">
- ${line}</j:whitespace>
        </j:when>
        <j:otherwise>
          <j:whitespace trim="false">
  ${line}</j:whitespace>
        </j:otherwise>
      </j:choose>
      <j:set var="counter" value="${counter}X"/>
    </j:forEach>
  </jsl:template>

  <jsl:template match="@*"/>

  <jsl:template match="text()"/>

</jsl:stylesheet>